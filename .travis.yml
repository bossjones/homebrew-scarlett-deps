---
cache:
  directories:
    - "$HOME/.pip/cache"
    - "$PYENV_ROOT/cache"

env:
  global:
    - PYTHON_CONFIGURE_OPTS="--enable-shared"
    # - PYENV_ROOT="$HOME/.pyenv"
    # - PATH="$PYENV_ROOT/bin:$PYENV_ROOT/shims:$PATH"
    # - PYENV_VERSION=3.7.0

# env:
#   global:
#   - LC_CTYPE=en_US.UTF-8
#   - LANG=en_US.UTF-8
#   - LANGUAGE=en_US.UTF-8

# FIXME: Enable this
# matrix:
#   fast_finish: true
#   allow_failures:
#     - osx_image: xcode8


# Reference:
#   https://docs.travis-ci.com/user/reference/osx/
#   https://docs.travis-ci.com/user/languages/objective-c/
#   https://docs.travis-ci.com/user/build-stages/
#   https://github.com/ReactiveCocoa/ReactiveSwift/blob/master/.travis.yml


# --------------------------
matrix:
  include:
  # ORIGINAL WORKING VERSION
  - name: "High Sierra (10.13) and xcode9.3"
    os: osx
    sudo: required
    language: objective-c
    # 10.13 (see https://docs.travis-ci.com/user/osx-ci-environment/#OS-X-Version)
    osx_image: xcode9.3
    xcode_sdk: macosx10.13
    # env: MY_RUBY_VERSION=""

  - name: "OS X El Capitan (10.11) and xcode8"
    os: osx
    sudo: required
    language: objective-c
    osx_image: xcode8
    xcode_sdk: macosx10.11
    env: MY_HOMEBREW_UPDATE="1"


  - name: "Sierra (10.12) and xcode8.3"
    os: osx
    sudo: required
    language: objective-c
    osx_image: xcode8.3
    xcode_sdk: macosx10.12


  - name: "Sierra (10.12) and xcode9"
    os: osx
    sudo: required
    language: objective-c
    osx_image: xcode9
    xcode_sdk: macosx10.12
    env: MY_HOMEBREW_UPDATE="1"


  - name: "Sierra (10.12) and xcode9.1"
    os: osx
    sudo: required
    language: objective-c
    osx_image: xcode9.1
    xcode_sdk: macosx10.12


  - name: "Sierra (10.12) and xcode9.2"
    os: osx
    sudo: required
    language: objective-c
    osx_image: xcode9.2
    xcode_sdk: macosx10.12

  - name: "High Sierra (10.13) and xcode9.4"
    os: osx
    sudo: required
    language: objective-c
    osx_image: xcode9.4
    xcode_sdk: macosx10.13

# WORKING VERSION
# # SOURCE: https://github.com/geerlingguy/mac-dev-playbook/blob/df25444b3f08e1c5a2c7b941d0a49850514f9d98/.travis.yml
# os: osx
# sudo: required
# language: objective-c
# # 10.13 (see https://docs.travis-ci.com/user/osx-ci-environment/#OS-X-Version)
# osx_image: xcode9.3
# xcode_sdk: macosx10.13

# SOURCE: https://github.com/xristoforaki/xplan/blob/da74e5ea1dde9988f6e4ccc90e319dbee6b08fd4/.travis.yml
# install:
#   # Install Apple's NullAudio device. Travis' VMs don't have any audio devices installed.
#   - sudo xcodebuild -project BGMApp/BGMAppTests/NullAudio/AudioDriverExamples.xcodeproj -target NullAudio DSTROOT="/" install
#   - sudo launchctl kickstart -kp system/com.apple.audio.coreaudiod || sudo killall coreaudiod

before_install:
  # ---------------------
  # SOURCE: https://github.com/Martiusweb/asynctest/blob/292e7519949901dfc49638cad2ff6c067e8a9dcb/.travis.yml
  - brew update
  - brew upgrade pyenv || brew install pyenv || true
  - pyenv install 3.7.0
  - pyenv local 3.7.0
  - eval "$(pyenv init -)"
  - brew upgrade pyenv-virtualenv || brew install pyenv-virtualenv || true
  - brew upgrade pyenv-virtualenvwrapper || brew install pyenv-virtualenvwrapper || true
  - pyenv virtualenv --system-site-packages 3.7.0 scarlett-deps37
  # - python3 -m venv env
  - pyenv local --unset
  # - source env/bin/activate
  - eval "$(pyenv virtualenv-init -)";
  - pyenv activate scarlett-deps37
  # -----------------------
  - xcodebuild -version
  # - "if [ ! -z ${MY_HOMEBREW_UPDATE+x} ]; then brew update; fi"
  - travis_retry brew tap bossjones/scarlett-deps
  # - echo "xcodebuild -showsdks"; xcodebuild -showsdks
  # - echo "TRAVIS_XCODE_SDK"; env
  # - xcodebuild -showsdks | awk '/^$/{p=0};p; /OS X SDKs:/{p=1}'
  # - _SDKPARAM=`xcodebuild -showsdks | awk '/^$/{p=0};p; /OS X SDKs:/{p=1}' | tail -1 | cut -f3`; echo "_SDKPARAM - ${_SDKPARAM}"

install:
- curl https://bootstrap.pypa.io/get-pip.py | python
- python -m pip install --upgrade wheel>=0.30.0 setuptools>=36.6.0

script:
  # - brew reinstall pyenv
  # - brew reinstall pyenv-virtualenv
  # - brew reinstall pyenv-virtualenvwrapper
  # - export PATH="$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH"
  # - python -m ensurepip --user
  # - source ./pyenv_test.sh
  - brew install --verbose --with-python --devel bossjones/scarlett-deps/cmu-sphinxbase; brew install --verbose --with-python bossjones/scarlett-deps/cmu-pocketsphinx
  - env PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig" pip install pygobject==3.28.3 ptpython black isort ipython pdbpp Pillow matplotlib numpy_ringbuffer MonkeyType
  - export LD_LIBRARY_PATH=/usr/local/lib

after_success:
- "gst-inspect-1.0 pocketsphinx"
- set -e python3 ./test.py
